const mongoose = require('mongoose');
const { DataElementSchema } = require('./basetypes/DataElement');
const Code = require('./basetypes/Code');
const Interval = require('./basetypes/Interval');
const Quantity = require('./basetypes/Quantity');
const DateTime = require('./basetypes/DateTime');
const { ComponentSchema } = require('./Component');
const { FacilityLocationSchema } = require('./FacilityLocation');
const { IdSchema } = require('./Id');
const Any = require('./basetypes/Any');

const [Number, String] = [
  mongoose.Schema.Types.Number,
  mongoose.Schema.Types.String,
];

const ResourceContainerSchema = DataElementSchema({
  Account: Any,
  ActivityDefinition: Any,
  AdverseEvent: Any,
  AllergyIntolerance: Any,
  Appointment: Any,
  AppointmentResponse: Any,
  AuditEvent: Any,
  Basic: Any,
  Binary: Any,
  BiologicallyDerivedProduct: Any,
  BodyStructure: Any,
  Bundle: Any,
  CapabilityStatement: Any,
  CarePlan: Any,
  CareTeam: Any,
  CatalogEntry: Any,
  ChargeItem: Any,
  ChargeItemDefinition: Any,
  Claim: Any,
  ClaimResponse: Any,
  ClinicalImpression: Any,
  CodeSystem: Any,
  Communication: Any,
  CommunicationRequest: Any,
  CompartmentDefinition: Any,
  Composition: Any,
  ConceptMap: Any,
  Condition: Any,
  Consent: Any,
  Contract: Any,
  Coverage: Any,
  CoverageEligibilityRequest: Any,
  CoverageEligibilityResponse: Any,
  DetectedIssue: Any,
  Device: Any,
  DeviceDefinition: Any,
  DeviceMetric: Any,
  DeviceRequest: Any,
  DeviceUseStatement: Any,
  DiagnosticReport: Any,
  DocumentManifest: Any,
  DocumentReference: Any,
  EffectEvidenceSynthesis: Any,
  Encounter: Any,
  Endpoint: Any,
  EnrollmentRequest: Any,
  EnrollmentResponse: Any,
  EpisodeOfCare: Any,
  EventDefinition: Any,
  Evidence: Any,
  EvidenceVariable: Any,
  ExampleScenario: Any,
  ExplanationOfBenefit: Any,
  FamilyMemberHistory: Any,
  Flag: Any,
  Goal: Any,
  GraphDefinition: Any,
  Group: Any,
  GuidanceResponse: Any,
  HealthcareService: Any,
  ImagingStudy: Any,
  Immunization: Any,
  ImmunizationEvaluation: Any,
  ImmunizationRecommendation: Any,
  ImplementationGuide: Any,
  InsurancePlan: Any,
  Invoice: Any,
  ItemInstance: Any,
  Library: Any,
  Linkage: Any,
  List: Any,
  Location: Any,
  Measure: Any,
  MeasureReport: Any,
  Media: Any,
  Medication: Any,
  MedicationAdministration: Any,
  MedicationDispense: Any,
  MedicationKnowledge: Any,
  MedicationRequest: Any,
  MedicationStatement: Any,
  MedicinalProduct: Any,
  MedicinalProductAuthorization: Any,
  MedicinalProductContraindication: Any,
  MedicinalProductIndication: Any,
  MedicinalProductIngredient: Any,
  MedicinalProductInteraction: Any,
  MedicinalProductManufactured: Any,
  MedicinalProductPackaged: Any,
  MedicinalProductPharmaceutical: Any,
  MedicinalProductUndesirableEffect: Any,
  MessageDefinition: Any,
  MessageHeader: Any,
  MolecularSequence: Any,
  NamingSystem: Any,
  NutritionOrder: Any,
  Observation: Any,
  ObservationDefinition: Any,
  OperationDefinition: Any,
  OperationOutcome: Any,
  Organization: Any,
  OrganizationAffiliation: Any,
  Patient: Any,
  PaymentNotice: Any,
  PaymentReconciliation: Any,
  Person: Any,
  PlanDefinition: Any,
  Practitioner: Any,
  PractitionerRole: Any,
  Procedure: Any,
  Provenance: Any,
  Questionnaire: Any,
  QuestionnaireResponse: Any,
  RelatedPerson: Any,
  RequestGroup: Any,
  ResearchDefinition: Any,
  ResearchElementDefinition: Any,
  ResearchStudy: Any,
  ResearchSubject: Any,
  RiskAssessment: Any,
  RiskEvidenceSynthesis: Any,
  Schedule: Any,
  SearchParameter: Any,
  ServiceRequest: Any,
  Slot: Any,
  Specimen: Any,
  SpecimenDefinition: Any,
  StructureDefinition: Any,
  StructureMap: Any,
  Subscription: Any,
  Substance: Any,
  SubstanceNucleicAcid: Any,
  SubstancePolymer: Any,
  SubstanceProtein: Any,
  SubstanceReferenceInformation: Any,
  SubstanceSourceMaterial: Any,
  SubstanceSpecification: Any,
  SupplyDelivery: Any,
  SupplyRequest: Any,
  Task: Any,
  TerminologyCapabilities: Any,
  TestReport: Any,
  TestScript: Any,
  ValueSet: Any,
  VerificationResult: Any,
  VisionPrescription: Any,
  Parameters: Any,
  qdmVersion: { type: String, default: '4.0.0' },
  _type: { type: String, default: 'ResourceContainer' },

});

module.exports.ResourceContainerSchema = ResourceContainerSchema;
module.exports.ResourceContainer = mongoose.model('ResourceContainer', ResourceContainerSchema);
